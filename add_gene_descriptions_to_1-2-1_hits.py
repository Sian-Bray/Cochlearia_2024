#Add gene descriptions to recipricol-best-hits or ortholouge groups output
#Sian Bray 2nd July 2019

# Example command:
# python3 /Users/sian_bray/Dropbox/Scripts/add_gene_descriptions_to_1-2-1_hits.py -d /Users/sian_bray/Dropbox/Bray/000_Research/Cochlearia_Massive/01_Data/Araport11_GFF3_genes_transposons.2023-01-02.gff -o /Users/sian_bray/Dropbox/Bray/000_Research/Cochlearia_Massive/01_Data/1-2-1_hits_all_gene_descriptions.tsv -i /Users/sian_bray/Dropbox/Bray/000_Research/Cochlearia_Massive/01_Data/Cochlearia_Thaliana_1-2-1_annotation.tsv

import argparse

parser=argparse.ArgumentParser(description="Add gene descriptions to recipricol-best-hits or ortholouge groups. Defaults are set to use the output orthogroups.tsv from OrthoFinder.")
parser.add_argument('-d', type=str, metavar='descriptions_file', required=True, help='Path to the gene descriptions file.')
parser.add_argument('-o', type=str, metavar='output_file', required=True, help='Name and/or path for the output file.')
parser.add_argument('-i', type=str, metavar='input_1-2-1', required=True, help='The 1-2-1 gene list generated by 1-1_annotation.py. Is a .tsv file with three columns; target gene (e.g. Cochlearia), model gene (e.g. A. thaliana) and method.')
args=parser.parse_args()

tags = ['Note', 'symbol', 'full_name', 'conf_class', 'conf_rating', 'curator_summary', 'description']
# include tag in output

input_file=open(args.i, 'r')
output_file=open(args.o, 'w+')

for line_i in input_file:

	keep = []
	descriptions_file=open(args.d, 'r')
	gene = line_i.replace('\n', '')
	output_file.write(f'{gene}\t')
	gene = gene.split('\t')
	gene = gene[1]
	gene = gene.split('.')
	gene = gene[0]
	print(gene)

	if gene == 'NA':
		output_file.write('\n')
		descriptions_file.close()
		continue

	for line_d in descriptions_file:
		if ('Name='+gene) in line_d:
			line_d = line_d.replace('\n', '')
			line_d = line_d.split('\t')
			line_d = line_d[8]
			line_d = line_d.split(';')
			for descript in line_d:
				for tag in tags:
					if tag in descript:
						if descript not in keep:
							keep.append(descript)

	for thing in keep:
		output_file.write(f'{thing}: ')

	output_file.write('\n')
	descriptions_file.close()

input_file.close()
output_file.close()